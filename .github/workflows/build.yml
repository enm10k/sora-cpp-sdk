name: build-workflow

on:
  push:
    paths-ignore:
    - 'doc/**'
    - '**.md'
    - 'LICENSE'
    - 'NOTICE'

jobs:
  build-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-20.04_x86_64
          - ubuntu-22.04_x86_64
    name: Build sora-cpp-sdk for ${{ matrix.name }}
    runs-on: ${{ matrix.name == 'ubuntu-22.04_x86_64' && 'ubuntu-22.04' || 'ubuntu-20.04' }}
    steps:
      - uses: actions/checkout@v3
      - name: Bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel-${{ matrix.name }}-v1
      - name: Install deps for ${{ matrix.name }}
        if: matrix.name == 'ubuntu-20.04_x86_64' || matrix.name == 'ubuntu-22.04_x86_64'
        run: |
          source VERSION
          # clang-12 と CUDA を入れる
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          # CUDA 10 なので ubuntu1804 で正しい
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
          sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
          sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get -y install cuda=$CUDA_VERSION clang-12
          # Intel Media SDK のために libva-dev, libdrm-dev を入れる
          DEBIAN_FRONTEND=noninteractive sudo apt-get -y install libva-dev libdrm-dev
      - run: pip3 install numpy
      - run: python3 run.py ${{ matrix.name }}
      - name: Get package name
        run: |
          source _package/${{ matrix.name }}/release/sora.env
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "boost_name=${BOOST_PACKAGE_NAME}" >> $GITHUB_OUTPUT
        id: package_name
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package_name.outputs.name }}
          path: _package/${{ matrix.name }}/release/${{ steps.package_name.outputs.name }}
      - name: Upload Boost Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package_name.outputs.boost_name }}
          path: _package/${{ matrix.name }}/release/${{ steps.package_name.outputs.boost_name }}
      - name: Upload Environment
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}.env
          path: _package/${{ matrix.name }}/release/sora.env
